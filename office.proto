syntax = "proto3";

package officepb:


enum OfficeType {
	NON_JUDICIAL = 0;
	JUDICIAL = 1;
}

message Office {
	string id = 1;
	string name = 2;
	string authority_id = 3;
	OfficeType type = 4;
	// incumbent_id is the ID of the filer who
	// currently holds the office position.
	string incumbent_id = 5;
}

message GetAllReq {}

message GetAllResp {
	repeated Office office = 1;
}

message NewReq {
	Office office = 1;
}

message NewResp {
	string office_id = 1;
}

message UpdateNameReq {
	string office_id = 1;
}

message UpdateNameResp {}

message UpdateTypeReq {
	string office_id = 1;
}

message UpdateTypeResp {}

message DeleteReq {
	string office_id = 1;
}

message DeleteResp {}

message ExistsReq {
	string office_id = 1;
}

message ExistsResp {
	bool exists = 1;
}

service Office {
	// GetAll retrieves all political office positions
	rpc GetAll(GetAllReq) returns (GetAllResp) {};

	// Add creates a new political office
	rpc New(NewReq) returns (NewResp) {};

	// UpdateName changes the name of an existing office position
	rpc UpdateName(UpdateNameReq) returns (UpdateNameResp) {};

	// UpdateType changes the office type of an existing office position
	rpc UpdateType(UpdateTypeReq) returns (UpdateTypeResp) {};

	// Delete removes an existing office position
	rpc Delete(DeleteReq) returns (DeleteResp) {};

	// AddIncumbent adds a filer to the office as the current holder of the position
	rpc AddIncumbent(AddIncumbentReq) returns (AddIncumbentResp) {};

	// Exists returns a bool to verify that an office position exists
	rpc Exists(ExistsReq) returns (ExistsResp) {};
}

